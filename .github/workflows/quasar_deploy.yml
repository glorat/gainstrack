name: Web client CICD

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "SOURCE_VERSION=$(jq -r .version VERSION.json)" >> $GITHUB_ENV
      - name: Determine version
        run: echo "Deploying version $SOURCE_VERSION"
      - name: Set up Node (16)
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: NPM ci
        run: npm ci
      - name: Build
        run: npx quasar build --publish sentry
      - name: Test
        run: npx quasar test --unit jest
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
         SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
         SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
         # SENTRY_URL: https://sentry.io/
        with:
         environment: production
         sourcemaps: ./dist/spa
         finalize: false
         ignore_missing: true
         ignore_empty: true
         version: ${{ env.SOURCE_VERSION }}
      - name: Remove Source Maps
        run: |
          # Remove all source maps
          find ./dist/spa -regextype posix-extended -regex '.*.(js|css).map$' -type f -delete
          # Remove source map references in files
          sed -i 's/^\/\/# sourceMappingURL=.*$//' $(find ./dist/spa -regextype posix-extended -regex '.*.(js|css)$' -type f)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: "./dist/spa"
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: "./dist/spa"
      - name: Deploy preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GAINSTRACK }}'
          projectId: gainstrack
          target: poc
          channelId: live