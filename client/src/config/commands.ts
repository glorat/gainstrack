import {AccountCommandDTO, AccountDTO} from '@/models';

export interface CommandConfig {
    prefix: string
    title: string
    description: string
    columns: string[] // The optional columns in the DTO this command may populate
    appliesTo: (acct: AccountDTO) => boolean
}

export const commands: CommandConfig[] = [
    {
        prefix: 'open', title: 'Open Account', description: 'Open an account', columns: [], appliesTo() {
            return false;
        }
    },
    {
        prefix: 'bal',
        title: 'Balance',
        description: 'Record a balance in an account',
        columns: ['balance', 'otherAccount'],
        appliesTo() {
            return true;
        }
    },
    {
        prefix: 'unit',
        title: 'Unit',
        description: 'Record a balance of securities in a multi-asset account',
        columns: ['balance', 'price'],
        appliesTo(acct: AccountDTO) {
            return acct.accountId.startsWith('Assets') && acct.options.multiAsset;
        }
    },
    {
        prefix: 'trade',
        title: 'Trade',
        description: 'Record a trade of securities in a multi-asset account',
        columns: ['change', 'price', 'commission'],
        appliesTo(acct: AccountDTO) {
            return acct.accountId.startsWith('Assets') && acct.options.multiAsset;
        }
    },
    {
        prefix: 'tfr',
        title: 'Transfer',
        description: 'Perform a transfer from one account to another',
        columns: ['change', 'options'],
        appliesTo(): boolean {
            return true;
        }
    },
    {
        prefix: 'fund',
        title: 'Fund',
        description: 'Fund an account from a source',
        columns: ['change', 'otherAccount'],
        appliesTo(acct: AccountDTO): boolean {
            return acct.accountId.startsWith('Assets') || acct.accountId.startsWith('Liabilities');
        }
    },
    {
        prefix: 'earn',
        title: 'Earn',
        description: 'Record an income generated by yourself (e.g. salary)',
        columns: ['change', 'otherAccount'],
        appliesTo(acct: AccountDTO): boolean {
            return acct.accountId.startsWith('Income');
        }
    },
    {
        prefix: 'yield',
        title: 'Yield',
        description: 'Record an income generated by an asset you have (e.g. dividends)',
        columns: ['change', 'asset'],
        appliesTo(acct: AccountDTO): boolean {
            return acct.accountId.startsWith('Assets');
        }
    }
];

export const defaultCommand = (cmd: any): AccountCommandDTO => {
    // @ts-ignore
    let c: AccountCommandDTO = {};
    if (cmd) {
        c = {...cmd};
    }
    c.date = c.date || new Date().toISOString().slice(0, 10);
    c.change = c.change || {number: 0, ccy: ''};
    c.balance = c.balance || {number: 0, ccy: ''};
    c.price = c.price || {number: 0, ccy: ''};
    c.commission = c.commission || {number: 0, ccy: ''};
    c.accountId = c.accountId || '';
    c.otherAccount = c.otherAccount || '';
    c.options = c.options || {};
    return c;
};
